<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASJSURBVFhHxZdtTFNXGMfrtuybH5YNPyx+mclmNgzgcC8JZIDsxWzCWJGVmS1uTpnK5iYEGe7F
        ETRb9mIIZpgtTp0gmn1Y32hBXAkMBKXDTqcZLShQBSqoUFra0tt7/3ueq7woVKVQ9yT/9Ob2nvP/nec8
        59xzFQAU/6cUFA9otdpKnU4HjUZzT8Re7MneDDCfb9zrYE/2ZoAIHjnHhc4udHZ1h1XswcGe7M0AC8YA
        urrt6LZfDKvYYxLAgpsA7Bcv4VJPb1jFHkEB2Lyvrw8OhyMs4r7ZIyjAQL8D7sEB+JxX51xe5xW4rvWj
        /7IjOMDI4FUosg7h/g2HMW9DhSzFByS6N1vNyypHxM4GghgIDuAfHsR9ZBquiP3VBu/gleAAwsiQPFKO
        Vco0vJWpQrryDXR32dHRfh42W0dIarfa5D5j9rfR1N4GQPS4oFhfLj/sGfFApVLBPeLF5f4B9PY50NPb
        F5J6bxRe1L42cJaDFiF87nEASRKRnp4OUZLgcrsx5HTOWM5hF5wuF4ZJHFH7bRBGnLcBGPVAsa5svASU
        SqV8LUKCEAjcvUQRAWon3VJMkWU9EEb5H9oJtVreCW/eiBDwjmeAH8rIyJhVPXaY9sK040VU5j6J6ryn
        cGhbImw1e+Q+tXrDNACibxxAmZYK1ZsZeD01JSSIum9TcLI4Du6Wd4G2jUD7Jvj/fg+W0kSc/FEF/dH6
        yQDq6yainwAmpiAkZ2rUWfszWorjIbZ9BPHfzRhuWoszpUk4uycZXvNanP7pJVT/8tUEgFp9A0Dy4+Gi
        eiw72I6lB2yyYg5YEb3PCq7gO4qKbEl5L34riIfPshGBthxI1hxYdidieWk94kpMOEMQgXMf41hR8lQA
        0T8qZwEEApGvZyi59ICavCcA6xYCyCeAfJiLE8aT2bp7OaUoDzXb46cCjPr98BOEEKpopXAYchdD+udD
        iLbPSZ9hqDkbJ4oTaVoS4TJvppr4BNVfxE0FEASBABgiNAkBUQZQZz8G8cQaSB2FENu3QyLhPOlCIdBV
        BE+tCjWFSVMBAtSBINB6D0ki7RfXQ529CKJlEzymTAjn8mgqChCwbqOizIfQsBrm755B1d4vp1mG1Fii
        nW+mmrxaWisK8FdJAgJnt8DXtAZu3Qp4q1bCV70S1468gOYdMWgqWQW9sXoCYK4OpZbyAph3PQvBsg7+
        U+sROJ0Fu0ZJNbEERtqM6r95GfbGgzKv3jABEFFWVvbn2LGcl+TdSQO1Rgu1rhK/G0xQ78xEy/fL4G9Z
        TXobYus70OdEoSr3cVSaWmD4oxGGmjroq45BX2kEe44dSvloHElKICWHoFcO5yV1mH+Iha8xDb7jSmhy
        omHYuhRH8yM5zSum6ZO92FM+lvPHAV/wEZlfDjPRoxXvL9Sd2hULT92rcNe+Bl9DCpnHjhk/R/0tmqZP
        9mJP+cNkNjHfQHMbaE6VjX2NKTj+9fMwfioDLCY9RHpwNgZ3avuIcWsUve2ioM+Npt8YGPNj2JxHzuZh
        DzZ5+pY5ZvOF4R752Mg4vQwxuW7CnvY5Tet/NN13IkeG1okAAAAASUVORK5CYII=
</value>
  </data>
</root>