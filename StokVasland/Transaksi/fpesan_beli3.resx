<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bts_barang.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMPSURBVDhPlc/tS1NxFMDxg01wEGTUX2BIr3pTJFiGptRWmVgsScynUKcsUuzmwzRWW3kTN7Wt
        Ladi5oZ2t9GmsgeztIwCSUqLmmmTaSMWZtnD3QNu53aXEQkG9eLL7/fmfDgH8vMlIBI1gbhGfaxZobf1
        6Ic+9lvHlyzmMTfVd09NUfe2G42jYDSOrBtEgIqz8lqymWJM4y5mcikYfudbCbmX/cyD527Gan2ywA7v
        /StQkFefSYg7GdWjpfDwV/w+QSPt9LMFkB5n/7YXXsY6+MRpMNzfsh4CBXmS4QrNBNP6Ev29bqQdi0iP
        LaOPzW/7iPTNWfQZhp2M5c6IkD0HKOr+muBk7hXvzirvpPAOelom0N89gwG9C7/dmsXPXdMYaHyKQcXA
        e8ZsGtH16Oyg1zvWBIJT5CL3uLdnW2WwQ9AespyxoL3MhFSeLqwr7A0PFRlxrvb2hxDV5xjs7ByArq7B
        NcHRjMr5HaWv7ibJUVlEoVo6hurWZ6hueIyaUhNeT21FDXHj9aKu26JWagZAecPOZvsd8NKK2/mnuz8V
        sMPKKdQMf0LtRBC1o19Q2zaNqnIjbWhps/uuKU28jmYF9MqrQa8QryYXA6QkF8Xz+aIPRTLHrGEhqPUg
        qkKI173sa3Z9MzZph76oVGafprFl+1TtZnDXR4OrPma1uhiA5JRiFined/iQyFlGqILdpgdvRsampvSm
        0QUZeYsmzrUuXm7qp5VEjtUl4cpm6rgbZi5shJ/Vb2Q3iAApJZCaKtzK54lExzKJ3uxssb2wQHpNWEKm
        ncq7GFeawbNN6zKZldlyZo6MbXfW/kL+BNLSSoHHE0F6egUIBNWQk3MBSsoUcDY9EaR74OJ84xYG38uY
        wNsqZq5hUwSJWrNBBODzz0BGRiVkZdVAbq4EhCxQdSAOiF0cLpkcpZ0nYxn0SFcRMlY7I46J/n3C34Dz
        B+OhJoEDFbu50Q3JUW3zV1mE3STMnuO6vIn8Z6A6kQuVu7mcCOJmz/GYTzCUgnj4X0AEIRJiOJeSOFdL
        juy35RbKj/8A9NoRhHFyWckAAAAASUVORK5CYII=
</value>
  </data>
</root>